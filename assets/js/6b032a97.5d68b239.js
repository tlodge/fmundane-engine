"use strict";(self.webpackChunkfmundane_docs=self.webpackChunkfmundane_docs||[]).push([[8490],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),c=p(t),m=i,f=c["".concat(l,".").concat(m)]||c[m]||s[m]||o;return t?r.createElement(f,a(a({ref:n},d),{},{components:t})):r.createElement(f,a({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=c;var u={};for(var l in n)hasOwnProperty.call(n,l)&&(u[l]=n[l]);u.originalType=e,u.mdxType="string"==typeof e?e:i,a[1]=u;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},988:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>s,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const o={sidebar_position:6},a="Running code",u={unversionedId:"running",id:"running",title:"Running code",description:"Running the fmundane-engine/src/server",source:"@site/docs/running.md",sourceDirName:".",slug:"/running",permalink:"/fmundane-engine/docs/running",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Future mundane webapps",permalink:"/fmundane-engine/docs/webapps"},next:{title:"Troubleshooting",permalink:"/fmundane-engine/docs/category/troubleshooting"}},l={},p=[{value:"Running the fmundane-engine/src/server",id:"running-the-fmundane-enginesrcserver",level:2},{value:"Running the client in dev mode:",id:"running-the-client-in-dev-mode",level:2},{value:"Building drivers",id:"building-drivers",level:2},{value:"Autostarting drivers on Linux",id:"autostarting-drivers-on-linux",level:2}],d={toc:p};function s(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"running-code"},"Running code"),(0,i.kt)("h2",{id:"running-the-fmundane-enginesrcserver"},"Running the fmundane-engine/src/server"),(0,i.kt)("p",null,"The fmundane-engine is reliant on mqtt.  The easiest way to run mqtt on the device running the fmundane-engine:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo docker run -it --name mosquitto -p 1883:1883 eclipse-mosquitto:1.6\n")),(0,i.kt)("p",null,"Next you can install your dependencies"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm install\n")),(0,i.kt)("p",null,"Then run the server"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm start\n")),(0,i.kt)("p",null,"And you should see the wizard of oz interface running at:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"http://127.0.0.1:3001\n")),(0,i.kt)("h2",{id:"running-the-client-in-dev-mode"},"Running the client in dev mode:"),(0,i.kt)("p",null,"in "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"fmundane-engine/client/src\n")),(0,i.kt)("p",null,"do a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm install\n")),(0,i.kt)("p",null,"then"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm run start\n")),(0,i.kt)("p",null,"and then to build it and run in production"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm run build\n")),(0,i.kt)("h2",{id:"building-drivers"},"Building drivers"),(0,i.kt)("p",null,"In most cases you'll just need to do an"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm install\n")),(0,i.kt)("p",null,"in each directory.  The screen_driver has a client and server directory.  You can run the dev server in the client:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm run dev\n")),(0,i.kt)("p",null,"and you can build it (after an npm install)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm run build\n")),(0,i.kt)("p",null,"and in the server directory, run with"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"node main.js\n")),(0,i.kt)("h2",{id:"autostarting-drivers-on-linux"},"Autostarting drivers on Linux"),(0,i.kt)("p",null,"We user supervisord to auto run the drivers at startup, see the drivers/supervisord directory for examples of conf files that will start your drivers and log to /var/ooi."))}s.isMDXComponent=!0}}]);