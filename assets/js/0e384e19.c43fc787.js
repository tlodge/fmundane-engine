"use strict";(self.webpackChunkfmundane_docs=self.webpackChunkfmundane_docs||[]).push([[671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=l(n),d=a,f=h["".concat(c,".").concat(d)]||h[d]||p[d]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},9881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:1},o="Caravan Intro",s={unversionedId:"intro",id:"intro",title:"Caravan Intro",description:"The Future Mundane engine brings together the sensors, devices and actuators in our caravan platform to enable us to create engaging, immersive experiences for small groups (1-4) of participants. Thanks to Matt Pilling for the following architecture diagram.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/fmundane-engine/docs/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Creating Experiences",permalink:"/fmundane-engine/docs/experience"}},c={},l=[{value:"The engine.",id:"the-engine",level:2}],u={toc:l};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"caravan-intro"},"Caravan Intro"),(0,a.kt)("p",null,"The Future Mundane engine brings together the sensors, devices and actuators in our caravan platform to enable us to create engaging, immersive experiences for small groups (1-4) of participants. Thanks to Matt Pilling for the following architecture diagram."),(0,a.kt)("img",{src:"https://tlodge.github.io/fmundane-engine/img/architecture.png"}),"There are several components to the software that is used to create and deploy new experiences.  It fits together as follows:",(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The engine.  This is the underlying (state machine) that takes an experience file then runs it on the caravan.  It is responsible for firing actions when particular events occur."),(0,a.kt)("li",{parentName:"ol"},"The WoZ interface \u2013 this is the (browser) interface that is used to load, control and monitor experiences."),(0,a.kt)("li",{parentName:"ol"},"The drivers.  These are all of the bits of code that communicate with sensors and devices in the caravan.  They are all triggered by (RESTful) web calls"),(0,a.kt)("li",{parentName:"ol"},"The sensors.  There are a bunch of custom sensors (arduinos and feathers) that connect to the caravan network that can be called by a webhook to do something."),(0,a.kt)("li",{parentName:"ol"},"The authoring  environment \u2013 this is a variant of Twine that supports the authoring of new experiences in the caravan.")),(0,a.kt)("h2",{id:"the-engine"},"The engine."),(0,a.kt)("p",null,"The drivers, the engine and the WoZ interface can be found in the fmundane-engine repository (",(0,a.kt)("a",{parentName:"p",href:"https://github.com/tlodge/fmundane-engine"},"https://github.com/tlodge/fmundane-engine"),"). The backend engine that runs an experience can be found in the server directory. The server directory is set out as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"authored \u2013 this is the directory of the experiences that have been authored. Files in this directory will be made available to the WoZ interface."),(0,a.kt)("li",{parentName:"ul"},"src \u2013 the server code. The main entry point is app.js, and express server"),(0,a.kt)("li",{parentName:"ul"},"webapps \u2013 these are apps that can be called and run inside the caravan (more on this later)"),(0,a.kt)("li",{parentName:"ul"},"scripts \u2013 some utility scripts used in the past \u2013 safely ignored")))}p.isMDXComponent=!0}}]);